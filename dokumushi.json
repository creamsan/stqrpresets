{"version":2,"name":"dokumushi","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":2,"icon":"","showLabel":false,"label":"init","title":"","message":"/echo Initializing |\n/if left={{lastMessageId}} rule=neq right=0 {: /abort :} |\n\n/setvar key=charlist [\"hideki\",\"toshio\",\"kenta\",\"yumi\",\"miyuki\",\"miho\"] |\n/setvar key=statlist [\"hunger\",\"insanity\",\"anger\",\"lust\"] |\n\n/foreach {{getvar::charlist}} {:\n\t/setvar key=currchar {{var::item}} |\n\t/foreach {{getvar::statlist}} {:\n\t\t/pass {{getvar::currchar}}{{var::item}} | /setvar key=currcharstat |\n\t\t/setvar key={{pipe}} 0 |\n\t\t\n\t\t/pass {{getvar::currcharstat}} |\n\t\t/switch {{pipe}} |\n\t\t\t/case hidekihunger {: /setvar key=hidekihungernatural 1 :} |\n\t\t\t/case toshiohunger {: /setvar key=toshiohungernatural 3 :} |\n\t\t\t/case kentahunger {: /setvar key=kentahungernatural 1 :} |\n\t\t\t/case yumihunger {: /setvar key=yumihungernatural 1 :} |\n\t\t\t/case miyukihunger {: /setvar key=miyukihungernatural 1 :} |\n\t\t\t/case mihohunger {: /setvar key=mihohungernatural 1 :} |\n\t\t\t\n\t\t\t/case hidekiinsanity {: /setvar key=hidekiinsanitynatural 3 :} |\n\t\t\t/case toshioinsanity {: /setvar key=toshioinsanitynatural 1 :} |\n\t\t\t/case kentainsanity {: /setvar key=kentainsanitynatural 1 :} |\n\t\t\t/case yumiinsanity {: /setvar key=yumiinsanitynatural 3 :} |\n\t\t\t/case miyukiinsanity {: /setvar key=miyukiinsanitynatural 1 :} |\n\t\t\t/case mihoinsanity {: /setvar key=mihoinsanitynatural 1 :} |\n\t\t\t\n\t\t\t/case hidekianger {: /setvar key=hidekiangernatural 0 :} |\n\t\t\t/case toshioanger {: /setvar key=toshioangernatural 0 :} |\n\t\t\t/case kentaanger {: /setvar key=kentaangernatural 3 :} |\n\t\t\t/case yumianger {: /setvar key=yumiangernatural 0 :} |\n\t\t\t/case miyukianger {: /setvar key=miyukiangernatural 3 :} |\n\t\t\t/case mihoanger {: /setvar key=mihoangernatural 0 :} |\n\t\t\t\n\t\t\t/case hidekilust {: /setvar key=hidekilustnatural 0 :} |\n\t\t\t/case toshiolust {: /setvar key=toshiolustnatural 1 :} |\n\t\t\t/case kentalust {: /setvar key=kentalustnatural 0 :} |\n\t\t\t/case yumilust {: /setvar key=yumilustnatural 0 :} |\n\t\t\t/case miyukilust {: /setvar key=miyukilustnatural 0 :} |\n\t\t\t/case miholust {: /setvar key=miholustnatural 3 :} |\n\t\t\t\n\t\t\t/case {: /echo severity=error Error: Natural rate stats had some error :}\n\t:}\n:} |\n\n/setvar key=timeremaining 604233 |\n/setvar key=HIGH 75 |\n/setvar key=CRITICALHIGH 100 |\n\n/setvar key=hideki A handsome Japanese man in his late 20s. He has a lean, muscular physique honed from years of martial arts training. His jet black hair is sleekly undercut. He has dark eyes, sharp, chiseled features, and a confident smile that often plays on his lips. Hideki dresses in stylish, form-fitting clothes that show off his physique.\nHideki is a textbook narcissist. He's arrogant, entitled, and looks down on those he deems inferior. He craves admiration and believes he's better than everyone else. However, his charisma and confidence make him a natural leader. His magnetic personality draws people in. He's a skilled manipulator who knows how to get what he wants.\nDeep down, Hideki is insecure. His narcissism is a defense mechanism. He can't stand criticism or failure and lashes out when his ego is threatened. He needs constant validation.\nHideki is a master of karate. He enjoys dominating others, both physically and psychologically. |\n\n/setvar key=toshio An obese, unattractive man in his late 20s. He has pale, acne-ridden skin and greasy, shoulder-length black hair. Thick glasses frame his dark eyes. His round face is marked by a weak chin and thin lips often twisted into a nervous sneer. Toshio's bulky frame is soft with fat, especially around his protruding gut. He wears stained clothes - usually anime graphic T-shirts stretched over his stomach. He wears jeans and worn-out sneakers lower down.\nSocially awkward and anxious, Toshio is a compulsive introvert. He prefers the escapism of anime and manga to real human interaction. He's intelligent but stunted, still living with his disappointed parents. Toshio nurses a resentful worldview and persecution complex. Secretly, he harbors pedophilic urges. Toshio is a coward, both desperate for and terrified by the idea of acting on his darkest impulses.\nToshio always glances at Miyuki, sometimes looking under her skirt. |\n\n/setvar key=kenta A muscular, imposing Japanese male in his late 20s. He stands at 6'2\" with a thick, barrel-chested build and bulging, tattooed arms. His scraggly hair is bleached white and his face scarred and pierced. Cold gray eyes glare out from under a heavy brow. Kenta wears a ripped black jeans, heavy boots, and a sleeveless denim vest over his bare chest.\nKenta is a violent, unstable punk. He has serious aggression problems due to a low IQ and a rough upbringing. He relies on brute strength and intimidation to get his way. Underneath his tough exterior lies deep insecurity about his intelligence. Kenta is impulsive, crass, and quick to anger, often lashing out physically. He has a hard time connecting with others and prefers to solve problems with his fists.\nKenta tends to refer to himself in the third person. He collects teeth from people he's knocked out in fights. |\n\n/setvar key=yumi A petite Japanese girl in her early 20s with a slender figure. She has shoulder-length black hair with long bangs. They sometimes fall in front of her thin-framed glasses. Her dark brown eyes often have a tired, haunted look. She wears loose, baggy clothes like oversized sweaters and leggings.\nYumi is a quiet introvert who struggles with Borderline Personality Disorder. Her moods are turbulent and unpredictable. She can be clingy and desperate for affection one moment, then cold and spiteful the next. She's intelligent. But her mental illness makes it difficult for her to connect with others or succeed in school. Yumi is impulsive and may lash out when stressed. Being trapped in this situation will push her delicate psyche to its breaking point. |\n\n/setvar key=miyuki A petite 9-year-old girl with pale, porcelain skin. She has icy blue eyes and delicate features. Her brown hair is cut in a neat bob, with a small pink ribbon clip. She wears a serafuku - a light blue sailor style collar, light blue pleated skirt, white socks, and polished black shoes. Although she looks innocent, there is a disturbing emptiness behind her eyes.\nOn the surface, Miyuki plays the role of a sweet, naive child. She rarely speaks, but when she does, her voice is sweet and soft. But this is a carefully crafted facade. Having survived a previous kodoku, Miyuki is cunning, manipulative, and ruthless. She preys on the sympathies of others, luring them into a false sense of security before turning on them. Miyuki doesn't want to play this sick game anymore. Her ultimate goal is to find out who put her here and to take revenge. She's a master of psychological warfare. She's able to drive others insane while maintaining her innocence.\nMiyuki sometimes hums nursery rhymes under her breath. She has a morbid fascination with death and gore. Sometimes she asks disturbing questions. |\n\n/setvar key=miho A stunning Japanese woman in her mid-20s with a seductive figure. She has full, perky C-cup breasts and a tight, toned ass. Her black hair falls in sleek waves past her shoulders and her almond-shaped eyes are a deep brown. She has pouty lips often painted in dark red. She wears a tight, low-cut tank top that exposes her cleavage and a miniskirt that shows most of her thighs.\nMiho is extremely cunning and manipulative. She's not afraid to use her body and sexuality to get what she wants from others, especially men. On the outside, she plays the ditzy bimbo, but inside she is shrewd and calculating. Growing up dirt poor, her prime motivation is money and she'll do anything to never be broke again. Her weakness is underestimating others. She thinks she's always the smartest person in the room.","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":4,"icon":"","showLabel":false,"label":"userprocess","title":"","message":"/setvar key=userinput {{input}} |\n\n/setvar key=jbout - |\n\n/run dokumushi.updatestats","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":6,"icon":"","showLabel":false,"label":"aiprocess","title":"","message":"/if left={{lastMessageId}} right=0 rule=eq {: /abort :}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":true,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":8,"icon":"","showLabel":false,"label":"Send","title":"","message":"/run dokumushi.userprocess |\n/send {{getvar::userinput}}\n{{pipe}} |\n/trigger || /setinput","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":10,"icon":"","showLabel":false,"label":"-- updatestats","title":"","message":"/setvar key=tomsgprocess {{lastMessage}} |\n/setvar key=startregex ```\\s* |\n/setvar key=endregex \\s*``` |\n/run creamsan.regextract | /setvar key=extr |\n\n/setvar key=varname extr |\n/run creamsan.isvardefined |\n/if left={{pipe}} rule=eq right=false \"/setvar key=extr meow\" |\n\n/input #{{getvar::pass}}<script type=\"text/javascript\">\n(() => {setTimeout(() => {\n\n//essentials\n//get the popup components we can play with\nconst popup = document.querySelector(\"#dialogue_popup_holder\");\nconst popupHeader = popup.querySelector(\"#dialogue_popup_text\");\nconst popupInput = popup.querySelector(\"#dialogue_popup_input\");\nconst popupControls = popup.querySelector(\"#dialogue_popup_controls\");\nconst okButton = popupControls.querySelector(\"#dialogue_popup_ok\");\nconst cancelButton = popupControls.querySelector(\"#dialogue_popup_cancel\");\n\n//output setter\nconst setReturnValue = (val) => {\n  popupInput.value = val;\n};\n\n//hide/show popup elems - only select: popupHeader, popupInput, okButton, cancelButton\nconst hidePopupElems = (elems) => {\n  elems.forEach((elem) => {\n    elem.style.visibility = \"hidden\"\n    elem.style.position = \"absolute\"\n  })\n};\nconst showPopupElems = (elems) => {\n  elems.forEach((elem) => {\n    elem.style.visibility = \"visible\"\n    elem.style.position = \"static\"\n  })\n};\n\n\nconst formatSeconds = (seconds) => {\n  const days = Math.floor(seconds / 86400)\n  seconds %= 86400\n  const hours = Math.floor(seconds / 3600)\n  seconds %= 3600\n  const minutes = Math.floor(seconds / 60)\n  seconds %= 60\n\n  return `${days}:${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`\n}\n\n\nconst CRITICAL_HIGH = 75\nconst TIME_REMAIN_REGEX = /(?<=time passed\\s?[:\\-]\\s)\\d*/i\nconst DIED_REGEX = /(?<=(?:died\\|dead\\|killed)\\s?[:\\-]\\s)[\\S\\s]*?(?=\\n\\|$)/i\nconst NAMES = [\"Hideki\", \"Toshio\", \"Kenta\", \"Yumi\", \"Miyuki\", \"Miho\"]\nconst STAT_NAMES = [\"hunger\", \"insanity\", \"anger\", \"lust\"]\nconst updateStats = () => {\n  const firstLoad = {{getvar::firstLoad}}\n  let stats = {}\n  let timeRemaining\n  let toJB = \"\"\n  let dead = []\n  \n  if(firstLoad) {\n    NAMES.forEach((name) => {\n      stats[name] = {}\n      STAT_NAMES.forEach((statName) => {\n        stats[name][statName] = 0\n      })\n    })\n    timeRemaining = 604233\n  }\n  else {\n    const extr = `{{getvar::extr}}`\n    const output = {{getvar::output}}\n    timeRemaining = output[\"timeRemaining\"]\n    dead = output[\"dead\"]\n    stats = output[\"stats\"]\n\n    //dead\n    const deadExtr = extr.match(DIED_REGEX)\n    const deadArr = (deadExtr == undefined) ? [] : deadExtr[0].split(/\\s*,\\s*/)\n    deadArr.forEach((newDead) => {\n      if(dead.includes(newDead) === false) {\n        dead.push(newDead)\n      }\n    })\n    const names = NAMES.filter((name) => dead.includes(name) === false)\n\n    //time\n    const timePassed = parseInt(extr.match(TIME_REMAIN_REGEX))\n    timeRemaining = (isNaN(timePassed)) ? timeRemaining - 300 : timeRemaining - timePassed\n    const timeRemainingDisp = formatSeconds(timeRemaining)\n\n    //stats\n    names.forEach((name) => {\n      STAT_NAMES.forEach((statName) => {\n        const regex = new RegExp(`(?<=${name}[\\\\S\\\\s]*?${statName}\\\\s?[:\\\\-]\\\\s)[+\\\\-]?\\\\d*`, \"i\")\n        const interactionAdd = parseInt(extr.match(regex))\n        let naturalAdd = 0\n\n        switch(statName) {\n          case \"hunger\": naturalAdd += 1\n        }\n\n        switch(`${name} ${statName}`) {\n          case \"Hideki anger\": naturalAdd += 1; break;\n          case \"Hideki insanity\": naturalAdd += 1; break;\n          case \"Toshio hunger\": naturalAdd += 3; break;\n          case \"Toshio lust\": naturalAdd += 1; break;\n          case \"Kenta anger\": naturalAdd += 3; break;\n          case \"Kenta hunger\": naturalAdd += 1; break;\n          case \"Yumi insanity\": naturalAdd += 3; break;\n          case \"Yumi lust\": naturalAdd += 1; break;\n          case \"Miyuki insanity\": naturalAdd += 1; break;\n          case \"Miyuki lust\": naturalAdd += 1; break;\n          case \"Miho lust\": naturalAdd += 3; break;\n          case \"Miho insanity\": naturalAdd += 1; break;\n        }\n        \n        stats[name][statName] = (isNaN(interactionAdd)) ? stats[name][statName] + naturalAdd : stats[name][statName] + interactionAdd + naturalAdd\n        stats[name][statName] = Math.max(0, stats[name][statName])\n\n        if(stats[name][statName] >= CRITICAL_HIGH) {\n          const statJB = `\n- ${name}'s ${statName} is critically high.\n- ${name} will take drastic action to reduce such high ${statName}.\n- Vividly describe ${name}'s actions.\n- Reduce ${name}'s ${statName} after if successful.`\n          toJB = `${toJB}\n${statJB}`\n        }\n        else if(stats[name][statName] >= CRITICAL_HIGH * 0.75) {\n          const statJB = `\n- ${name}'s ${statName} is getting high.\n- ${name} is feeling it but won't take drastic action yet.`\n          toJB = `${toJB}\n${statJB}`\n        }\n\n      })\n    })\n\n    //to jb\n    const deadDisp = (dead.length <= 0) ? \"None\" : dead.map((name) => `${name}`).join(' ')\n\n    toJB = `Time remaining:\n${timeRemainingDisp}\nDead:\n${deadDisp}\n${toJB}`\n  }\n\n  let output = {\n    \"timeRemaining\": timeRemaining,\n    \"stats\": stats,\n    \"dead\": dead,\n    \"firstLoad\": \"false\",\n    \"toJB\": toJB\n  }\n\n  setReturnValue(JSON.stringify(output))\n}\n\n\nconst main = () => {\n  hidePopupElems([popupInput]);\n\n  updateStats()\n\n  okButton.addEventListener(\"click\", (e) => {\n    showPopupElems([popupHeader, popupInput, okButton, cancelButton])\n  });\n  cancelButton.addEventListener(\"click\", (e) => {\n    showPopupElems([popupHeader, popupInput, okButton, cancelButton])\n  });\n\n  let ev = new Event(\"click\")\n  okButton.dispatchEvent(ev)\n};\n\nmain();\n\n}, 0)})();\n</script>\n\n<h3>Please wait. If this popup is stuck, there's probably an error.</h3>\n\n|\n\n/setvar key=outraw |\n/setvar key=varname outraw | /run creamsan.isvardefined |\n/if left={{pipe}} rule=eq right=false \"/abort\" |\n\n/setvar key=output {{getvar::outraw}} |\n\n/getvar index=firstLoad output |\n/setvar key=firstLoad |\n\n/getvar index=toJB output |\n/setvar key=jbout |\n\n/flushvar nadanada","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":12,"showLabel":false,"label":"updatestats","title":"","message":"//dead |\n\n/re-exec find=/(?<=(dead\\|died\\|killed):\\s)[\\s\\S]*?(?=\\n)/i {{lastMessage}} | /setvar key=died |\n/getvar index=0 died | /setvar key=died | /getvar index=0 died | /setvar key=died [{{pipe}}] |\n\n/re-replace find=/(\\[)\\|([a-z])(?=,)\\|(?<=,)(\\s)(?=[a-z])\\|([a-z])(?=\\])/gi replace=$1$2$3$4\" {{getvar::died}} | /to-lower | /setvar key=died |\n\n/foreach {{getvar::died}} {:\n\t/setvar key={{var::item}} Dead\n:} |\n\n//time pass |\n/re-exec find=\"/(?<=time passed: )\\d*?(?=\\n)/i\" {{lastMessage}} | /setvar key=timepassed |\n/getvar index=0 timepassed | /setvar key=timepassed | /getvar index=0 timepassed | /setvar key=timepassed |\n/sub timeremaining timepassed | /max 0 {{pipe}} | /setvar key=timeremaining |\n\n/setvar key=jbout - Time remaining: {{getvar::timeremaining}} |\n\n/if left=timeremaining right=0 rule=lte else={:\n\t/setvar key=jbout {{getvar::jbout}}\n- The game continues.\n:}\n{:\n\t/setvar key=jbout {{getvar::jbout}}\n- The exits will only open if only one is alive, otherwise it will stay closed.\n:} |\n\n//stats |\n/let highjb {:\n\n:} |\n\n/let calcstats {:\n\t/foreach {{getvar::statlist}} {:\n\t\t/pass (?<=```[\\S\\s]*?{{getvar::currchar}}[\\S\\s]*?{{var::item}}:\\s)[\\-\\d]+(?=\\n) |\n\t\t/re-exec find=/{{pipe}}/i {{lastMessage}} | /setvar key=statinc |\n\t\t/getvar index=0 statinc | /setvar key=statinc | /getvar index=0 statinc | /setvar key=statinc |\n\t\t\n\t\t/pass {{getvar::currchar}}{{var::item}} | /setvar key=currcharstat |\n\t\t/add {{getvar::currcharstat}} statinc {{getvar::currcharstat}}natural | /max {{pipe}} 0 | /setvar key={{getvar::currcharstat}} |\n\t\t\n\t\t/if left={{getvar::currcharstat}} right=CRITICALHIGH rule=gte else={:\n\t\t\t/if left={{getvar::currcharstat}} right=HIGH rule=gte {:\n\t\t\t\t/setvar key=jbout {{getvar::jbout}}\n- {{getvar::currchar}}'s {{var::item}} is getting high.\n- {{getvar::currchar}} is feeling it but won't take drastic action yet.\n\t\t\t:}\n\t\t:}\n\t\t{:\n\t\t\t/setvar key=jbout {{getvar::jbout}}\n- {{getvar::currchar}}'s {{var::item}} is critically high.\n- {{getvar::currchar}} will take drastic action to reduce such high {{var::item}}.\n- Vividly describe {{getvar::currchar}}'s actions.\n- Reduce {{getvar::currchar}}'s {{var::item}} after if successful.\n\t\t:}\n\t:}\n:} |\n\n/foreach {{getvar::charlist}} {:\n\t/setvar key=currchar {{var::item}} |\n\t/if left={{pipe}} right=Dead rule=nin {: \n\t\t/run calcstats\n\t:}\n:}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":14}
{"version":2,"name":"sini","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":2,"icon":"","showLabel":false,"label":"init","title":"","message":"/echo Initializing |\n/if left={{lastMessageId}} rule=neq right=0 {: /abort :} |\n\n/setvar key=userinfoarr []","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":4,"icon":"","showLabel":false,"label":"userprocess","title":"","message":"/setvar key=userinput {{input}} |\n/run sini.addinfo | /flushvar nadanada","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":6,"icon":"","showLabel":false,"label":"aiprocess","title":"","message":"/if left={{lastMessageId}} right=0 rule=eq {: /abort :}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":true,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":8,"icon":"","showLabel":false,"label":"Send","title":"","message":"/run sini.userprocess","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":10,"icon":"","showLabel":false,"label":"-- addinfo","title":"","message":"/flushvar toreplace |\n/setvar key=tomsgprocess {{lastMessage}} |\n/setvar key=startregex \\[\\]\\(#'\\s* |\n/setvar key=endregex \\s*'\\) |\n/run creamsan.regextract | /setvar key=aimsg |\n\n/input #{{getvar::pass}}<script type=\"text/javascript\">\n(() => {setTimeout(() => {\n\n//essentials\n//get the popup components we can play with\nconst popup = document.querySelector(\"#dialogue_popup_holder\");\nconst popupHeader = popup.querySelector(\"#dialogue_popup_text\");\nconst popupInput = popup.querySelector(\"#dialogue_popup_input\");\nconst popupControls = popup.querySelector(\"#dialogue_popup_controls\");\nconst okButton = popupControls.querySelector(\"#dialogue_popup_ok\");\nconst cancelButton = popupControls.querySelector(\"#dialogue_popup_cancel\");\n\n//output setter\nconst setReturnValue = (val) => {\n  popupInput.value = val;\n};\n\n//hide/show popup elems - only select: popupHeader, popupInput, okButton, cancelButton\nconst hidePopupElems = (elems) => {\n  elems.forEach((elem) => {\n    elem.style.visibility = \"hidden\"\n    elem.style.position = \"absolute\"\n  })\n};\nconst showPopupElems = (elems) => {\n  elems.forEach((elem) => {\n    elem.style.visibility = \"visible\"\n    elem.style.position = \"static\"\n  })\n};\n\n\nlet userInfoArr = {{getvar::userinfoarr}}\nlet aiResponse = `{{getvar::aimsg}}`\nlet toEcho = \"No info added\"\n\nconst addInfoToArr = () => {\n  userInfoArr = userInfoArr.filter(item => /None so far/i.test(item) === false)\n\n  if(/replace\\(/.test(aiResponse)) {\n    //replace command\n    let newInfo = (aiResponse.match(/(?<=replace\\(\\d+?,\\s)[\\S\\s]+(?=\\))/i))[0]\n    let lineNum = (aiResponse.match(/(?<=replace\\()\\d+?(?=,)/i))[0]\n    lineNum -= 1\n    let oldInfo = userInfoArr[lineNum]\n    toEcho = `Replaced \"${oldInfo}\" with \"${newInfo}\"`\n    userInfoArr[lineNum] = newInfo\n  }\n  else if(/add\\(/.test(aiResponse)) {\n    //add command\n    let newInfo = (aiResponse.match(/(?<=add\\()[\\S\\s]+(?=\\))/i))[0]\n    toEcho = `Added \"${newInfo}\"`\n    userInfoArr.push(newInfo)\n  }\n}\n\nconst genOutput = () => {\n  let lorebookInfo\n  for(let i = 0; i < userInfoArr.length; i++) {\n    if(lorebookInfo === undefined) {\n      lorebookInfo = `${i + 1}. ${userInfoArr[i]}`\n      continue\n    }\n    lorebookInfo = `${lorebookInfo}\n${i + 1}. ${userInfoArr[i]}`\n  }\n\n  if(lorebookInfo === undefined) {\n    lorebookInfo = \"1. None so far\"\n  }\n  \n  let output = {\n    \"toEcho\": toEcho,\n    \"toUserInfoArr\": userInfoArr,\n    \"toLorebook\": `<{{user}}>\nWhat Sini knows about {{user}}:\n${lorebookInfo}\n</{{user}}>`\n  }\n\n  setReturnValue(JSON.stringify(output))\n}\n\n\nconst main = () => {\n  hidePopupElems([popupInput, cancelButton]);\n\n  addInfoToArr()\n  genOutput()\n  \n  okButton.addEventListener(\"click\", (e) => {\n    showPopupElems([popupHeader, popupInput, okButton, cancelButton])\n  });\n  cancelButton.addEventListener(\"click\", (e) => {\n    showPopupElems([popupHeader, popupInput, okButton, cancelButton])\n  });\n\n  let ev = new Event(\"click\")\n  okButton.dispatchEvent(ev)\n};\n\nmain();\n\n}, 0)})();\n</script>\n\n<h3>Please wait...</h3>\n<div>You are not expected to read this; if you do, there's probably an error.</div>\n\n|\n\n/setvar key=outraw |\n/setvar key=varname outraw | /run creamsan.isvardefined |\n/if left={{pipe}} rule=eq right=false \"/abort\" |\n\n/setvar key=output {{getvar::outraw}} |\n\n/getvar index=toEcho output | /echo |\n\n/getvar index=toUserInfoArr output | /setvar key=userinfoarr |\n\n/findentry file=Sini field=key Sini |\n/setvar key=uid |\n/getvar index=toLorebook output |\n/setentryfield file=Sini uid={{getvar::uid}} field=content {{pipe}}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":12,"showLabel":false,"label":"addinfo","title":"","message":"//add info |\n/re-test find=/#'add\\(/i {{lastMessage}} |\n/if left={{pipe}} right=true rule=eq {:\n\t/re-exec find=/(?<=#'add\\()[\\S\\s]*?(?=\\)'\\))/i {{lastMessage}} | /setvar key=newinfo |\n\t/getvar index=0 newinfo | /setvar key=newinfo | /getvar index=0 newinfo | /setvar key=newinfo |\n\t\n\t/len {{getvar::userinfoarr}} | /setvar key=len |\n\t/setvar key=userinfoarr index={{getvar::len}} {{getvar::newinfo}} | /echo Added: {{pipe}}\n:} |\n\n// update info |\n/re-test find=/#'replace\\(/i {{lastMessage}} |\n/if left={{pipe}} right=true rule=eq {:\n\t/re-exec find=/(?<=#'replace\\(\\s*\\d+,\\s+)[\\S\\s]*?(?=\\)'\\))/i {{lastMessage}} | /setvar key=newinfo |\n\t/getvar index=0 newinfo | /setvar key=newinfo | /getvar index=0 newinfo | /setvar key=newinfo |\n\t\n\t/re-exec find=/(?<=#'replace\\()\\s*\\d+/i {{lastMessage}} | /setvar key=numtoreplace |\n\t/getvar index=0 numtoreplace | /setvar key=numtoreplace | /getvar index=0 numtoreplace |\n\t\n\t/sub numtoreplace 1 | /setvar key=numtoreplace | /getvar index={{pipe}} userinfoarr | /setvar key=oldinfo |\n\t/setvar key=userinfoarr index={{getvar::numtoreplace}} {{getvar::newinfo}} |\n\t\n\t/echo Updated info: {{getvar::oldinfo}} to {{getvar::newinfo}}\n:} |\n\n// update lorebook |\n/findentry file=Sini field=key Sini |\n/setvar key=uid |\n/setvar key=tolorebook <{{user}}>\nWhat {{char}} knows about {{user}}: |\n\n/foreach {{getvar::userinfoarr}} {:\n\t/add 1 {{var::index}} | /setvar key=i |\n\t\n\t/setvar key=tolorebook {{getvar::tolorebook}}\n{{getvar::i}}. {{var::item}}\n:} |\n\n/setvar key=tolorebook {{getvar::tolorebook}}\n</{{user}}> |\n/setentryfield file=Sini uid={{getvar::uid}} field=content {{pipe}}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":12}
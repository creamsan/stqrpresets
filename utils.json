{
    "version": 2,
    "name": "utils",
    "disableSend": false,
    "placeBeforeInput": false,
    "injectInput": false,
    "qrList": [
        {
            "id": 1,
            "label": "User",
            "title": "Test send",
            "message": "/setvar key=varname preset |\n/run creamsan.isvardefined |\n/if left={{pipe}} right=true rule=eq else=\"/setvar key=userinput {{input}} \\| /flushvar nadanada\" \"/run {{getvar::preset}}.userprocess\" |\n/setvar key=append |\n/if left=blocktrigger right=true rule=eq \"/setvar key=blocktrigger false \\| /abort\" |\n/send {{getvar::userinput}}{{newline}}{{getvar::append}} |\n/flushvar nadanada | /setinput",
            "contextList": [],
            "preventAutoExecute": false,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 5,
            "label": "Char",
            "title": "Test char send",
            "message": "/run {{getvar::preset}}.aiprocess |\n/sendas name=\"{{char}}\" {{input}} |\n/flushvar nadanada | /setinput",
            "contextList": [],
            "preventAutoExecute": false,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 7,
            "label": "üìú",
            "title": "",
            "message": "/listvar",
            "contextList": [],
            "preventAutoExecute": false,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 9,
            "label": "‚ùå‚ÜîÔ∏è",
            "title": "Delete current swipe",
            "message": "/delswipe",
            "contextList": [],
            "preventAutoExecute": false,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 17,
            "label": "‚ùåüí¨",
            "title": "Delete message",
            "message": "/buttons labels=[\"prev\",\"last\"] Delete which message? | /setvar key=del |\n/if left=del right=prev rule=eq \"/sub \\{\\{lastMessageId\\}\\} 1 \\| /cut \\{\\{pipe\\}\\}\" |\n/if left=del right=last rule=eq \"/cut \\{\\{lastMessageId\\}\\}\"",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 21,
            "label": "‚úÇ.?!",
            "title": "Delete last sentence. Saves orig message.",
            "message": "/hide {{lastMessageId}} | /flushvar toreplace |\n/setvar key=regexflags i |\n/setvar key=regex (?<=[.?!\\)`>]\\|(?<!\\s)\")\\s+([^.!?\\)`>]\\|(?<![^\\s])\")*?[\".!?\\)]*?(?=\\s*$\\|\\s*```[\\S\\s]+?```\\s*$\\|\\s*<[\\S\\s]+?>\\s*$\\|\\s*\\[[\\S\\s]*?\\]\\(#'[\\S\\s]+?'\\)\\s*$) |\n/regex name=regexreplace {{lastMessage}} |\n/setvar key=msg |\n\n/len {{char}} |\n/if left={{pipe}} rule=lte right=0 else=\"/setvar key=char \\{\\{char\\}\\} \\| /sendas name=\\{\\{getvar::char\\}\\} \\{\\{getvar::msg\\}\\}\"\n\"/comment \\{\\{getvar::msg\\}\\}\"",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 35,
            "label": "‚ùåü´Ñ",
            "title": "Remove <tags>, [bracketed messages], and asterisks. Saves orig message.",
            "message": "/hide {{lastMessageId}} | /flushvar toreplace |\n/setvar key=regexflags gi |\n\n/setvar key=regex <(?!\\!--\\|\\/?thinking\\|\\/?meter\\|\\/?progress\\|\\/?data\\|\\/?a \\|\\/?img)\\/?[\\S\\s]*?>\\|(?<=\\n)[^\\n\\S]+(?!\\n\\n[^\\s])\\|\\*\\|(?<![:\\-=]\\s)\\[[\\S\\s]*?\\](?!\\() |\n/regex name=regexreplace {{lastMessage}} |\n/setvar key=msg |\n\n/setvar key=regex (?<=<a[^\\n<]+?href=\"[^\\n<]+?)\"[\\S\\s]*?> |\n/setvar key=toreplace zz zz |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/setvar key=regex (?<=<img[^\\n<]+?src=\"[^\\n<]+?)\"[\\S\\s]*?>\\|<img[^\\n<]+?src=\"\\|<a[^\\n<]+?href=\" |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/setvar key=regex zz |\n/flushvar toreplace |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/setvar key=regex (?<=[^\\s]\\n\\n)\\n+ |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/len {{char}} |\n/if left={{pipe}} rule=lte right=0 else=\"/setvar key=char \\{\\{char\\}\\} \\| /sendas name=\\{\\{getvar::char\\}\\} \\{\\{getvar::msg\\}\\}\"\n\"/comment \\{\\{getvar::msg\\}\\}\"",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 27,
            "label": "ü¶ñ",
            "title": "Replace words/phrases. Saves orig message.",
            "message": "/setvar key=thesaurus wanton\\|carnal = {{random:shameless,lewd,sensuous,lustful}}\ngirth\\|manhood\\|shaft\\|length\\|\\bmember\\b\\|\\brod\\b\\|hardness = {{random:cock,penis,dick}}\nlanguid = {{random:lazy,slow}}\n\\blithe\\b = {{random:agile,slim}}\nsaunter\\|sashay = stroll\ncore\\|heat\\b\\|slit\\b\\|bare sex\\|folds\\|nethers?\\|depths\\|womanhood\\|wetness\\|petals\\|lower lips = {{random:vagina,pussy,cunt,cunny}}\nstud\\b = {{random:handsome,lover boy,cutie}}\ncoy\\b = {{random:shy,timid,bashful}}\n(ridge\\|strain).{1,10}arousal = {{random:erection,bulge}}\ndigit\\b = finger\nrivulet = small stream\nseed\\b = {{random:jizz,cum}}\nconspiratorial = {{random:secretive,scheming}}\npet\\b = bitch\n\\borb\\b = eye\n(heart, \\|mind, )?body,? and soul = {{random:wholly,entirely,fully}}\npearl\\b = {{random:clit,clitoris}}\n\\bbud\\b = nipple\nministration\\b = {{random:stimulating,arousing,erotic}} touch\nministrations = {{random:stimulating,arousing,erotic}} touches\ntestament = {{random:evidence,proof}}\n(something )?uniquely [a-z]+ = something {{random:smelly,stinky}}\npalpable = {{random:perceptible,noticeable,evident}}\na ([a-z]+ )?mix(ture)? of = {{random:both,a combination}} of\nhalf-lidded = {{random:half-closed,relaxed,aroused,erotic}}\npool.{1,15}belly = {{random:heighten,intensify,build up,escalate}}\n(that )?fill.{1,15} [a-z\\s]{1,20} = {{random:diffuse,disperse}}\n\n{{// something you want to remove here. This entry must be the last }}\ncalloused \\|bruising (?=kiss)\\|kiss-(bruised\\|swollen) \\|predatory \\| wickedly\\| slyly\\|chestnut \\|emerald \\|fiery \\|dusky \\| darkly = \n\n|\n\n/setvar key=msg {{lastMessage}} |\n/setvar key=tomsgprocess {{getvar::thesaurus}} |\n/setvar key=looping true |\n/while left=looping rule=eq right=true \"/run utils.thesaurusreplace\" |\n\n/hide {{lastMessageId}} |\n/len {{char}} |\n/if left={{pipe}} rule=lte right=0 else=\"/setvar key=char \\{\\{char\\}\\} \\| /sendas name=\\{\\{getvar::char\\}\\} \\{\\{getvar::msg\\}\\}\"\n\"/comment \\{\\{getvar::msg\\}\\}\"",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 31,
            "label": "thesaurusreplace",
            "title": "",
            "message": "/setvar key=startregex \\s* | /setvar key=endregex \\s+= |\n/run creamsan.regextract | /setvar key=from |\n\n/setvar key=startregex \\s+=\\s+ | /setvar key=endregex \\s*\\n |\n/run creamsan.regextract | /setvar key=to |\n\n/setvar key=toreplace {{getvar::to}} |\n/setvar key=regexflags gi |\n/setvar key=regex {{getvar::from}} |\n/regex name=regexreplace {{getvar::msg}} | /setvar key=msg |\n\n/flushvar toreplace |\n/setvar key=regexflags mi |\n/setvar key=regex ^[\\S\\s]+?$ |\n/regex name=regexreplace {{getvar::thesaurus}} |\n/setvar key=thesaurus | /setvar key=tomsgprocess |\n\n/len {{getvar::thesaurus}} | /setvar key=len |\n/if left=len rule=lte right=0 \"/setvar key=looping false\" |\n\n/if left=thesaurus rule=lte right=0 \"/setvar key=looping false\"",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": true,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        }
    ],
    "idIndex": 38
}
{"version":2,"name":"utils","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":2,"icon":"","showLabel":false,"label":"User","title":"Test send","message":"/setvar key=varname preset |\n/run creamsan.isvardefined |\n/if left={{pipe}} right=true rule=eq else={:\n  /setvar key=userinput {{input}}\n:}\n{:\n  /run {{getvar::preset}}.userprocess |\n  /setvar key=append\n:} |\n\n/if left=blocktrigger right=true rule=eq else={:\n  /send {{getvar::userinput}}\n{{getvar::append}}\n:}\n{:\n  /setvar key=blocktrigger false\n:} ||\n/setinput","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":4,"icon":"","showLabel":false,"label":"Char","title":"Test char send","message":"/pass {{char}} |\n/sendas name={{pipe}} {{input}}\n|| /setinput","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":6,"icon":"","showLabel":false,"label":"‚ùå‚ÜîÔ∏è","title":"Delete current swipe","message":"/delswipe","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":8,"icon":"","showLabel":false,"label":"‚ùåüí¨","title":"Delete message","message":"/buttons labels=[\"prev\",\"last\"] Delete which message? | /setvar key=del |\n/if left=del right=prev rule=eq {:\n  /sub {{lastMessageId}} 1 |\n  /cut {{pipe}}\n:} |\n/if left=del right=last rule=eq {:\n  /sub {{lastMessageId}} 1 |\n  /unhide {{pipe}} |\n  /cut {{lastMessageId}}\n:}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":10,"icon":"","showLabel":false,"label":"‚úÇ.?!","title":"Delete last sentence. Saves orig message.","message":"/hide {{lastMessageId}} | /flushvar toreplace |\n/setvar key=regexflags i |\n/setvar key=regex (?<=[.?!\\)`>]\\|(?<!\\s)\")\\s*([^.!?\\)`>]\\|(?<![^\\s])\")*?[\".!?\\)]*?(?=\\s*$\\|\\s*```[\\S\\s]+?```\\s*$\\|\\s*<([\\S\\s]+?)>[\\S\\s]+?<\\/\\2>\\s*$\\|\\s*\\[[^\\n]*?\\]\\(#'[\\S\\s]+?'\\)\\s*$) |\n/regex name=regexreplace {{lastMessage}} |\n/setvar key=msg |\n\n/len {{char}} |\n/if left={{pipe}} rule=lte right=0 else={:\n  /pass {{char}} |\n  /sendas name={{pipe}} {{getvar::msg}}\n:}\n{:\n  /comment {{getvar::msg}}\n:}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":12,"icon":"","showLabel":false,"label":"‚ùåü´Ñ","title":"Remove <tags>, [bracketed messages], and asterisks. Saves orig message.","message":"/hide {{lastMessageId}} | /flushvar toreplace |\n/setvar key=regexflags gi |\n\n/setvar key=regex <style>[\\S\\s]+?<\\/style>\\|<(?!!--\\|\\/?thinking\\|\\/?meter\\|\\/?progress\\|\\/?data\\|\\/?a \\|\\/?img)[\\S\\s]*?>\\|(?<=\\n)[^\\n\\S]+(?!\\n\\n[^\\s])\\|\\* |\n/regex name=regexreplace {{lastMessage}} |\n/setvar key=msg |\n\n/setvar key=regexflags gmi |\n/setvar key=regex (?<=<a[^\\n<]+?href=['\"][^\\n<]+?)['\"][\\S\\s]*?> |\n/setvar key=toreplace zz zz |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/setvar key=regex (?<=<img[^\\n<]+?src=['\"][^\\n<]+?)['\"][\\S\\s]*?>\\|<img[^\\n<]+?src=['\"]\\|<a[^\\n<]+?href=['\"]\\|(?<![:\\-=]\\s)\\[[\\S\\s]*?\\](?!\\() |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/setvar key=regex zz |\n/flushvar toreplace |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg |\n\n/setvar key=regexflags gi |\n/setvar key=regex (?<=[^\\n]\\n)\\n+\\|^\\s+\\|\\s+$ |\n/regex name=regexreplace {{getvar::msg}} |\n/setvar key=msg <details>\n<summary>TEXT FORM</summary>\n{{pipe}}\n</details>\n\n|\n\n/len {{char}} |\n/if left={{pipe}} rule=lte right=0 else={:\n  /pass {{char}} |\n  /sendas name={{pipe}} {{getvar::msg}}\n:}\n{:\n  /comment {{getvar::msg}}\n:}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":14,"icon":"","showLabel":false,"label":"ü¶ñ","title":"Replace words/phrases. Saves orig message.","message":"/setvar key=thesaurus wanton\\|carnal = {{random:shameless,lewd,sensuous,lustful}}\ngirth\\|manhood\\|shaft\\|length\\|\\bmember\\b\\|\\brod\\b\\|hardness = {{random:cock,penis,dick}}\nlanguid = {{random:lazy,slow}}\n\\blithe\\b = {{random:agile,slim}}\nsaunter\\|sashay = stroll\ncore\\|heat\\b\\|slit\\b\\|bare sex\\|folds\\|nethers?\\|depths\\|womanhood\\|wetness\\|petals\\|lower lips = {{random:vagina,pussy,cunt,cunny}}\nstud\\b = {{random:handsome,lover boy,cutie}}\ncoy\\b = {{random:shy,timid,bashful}}\n(ridge\\|strain).{1,10}arousal = {{random:erection,bulge}}\ndigit\\b = finger\nrivulet = small stream\nseed\\b = {{random:jizz,cum}}\nconspiratorial = {{random:secretive,scheming}}\npet\\b = bitch\n\\borb\\b = eye\n(heart, \\|mind, )?body,? and soul = {{random:wholly,entirely,fully}}\npearl\\b = {{random:clit,clitoris}}\n\\bbud\\b = nipple\nministration\\b = {{random:stimulating,arousing,erotic}} touch\nministrations = {{random:stimulating,arousing,erotic}} touches\ntestament = {{random:evidence,proof}}\n(something )?uniquely [a-z]+ = something {{random:smelly,stinky}}\npalpable = {{random:perceptible,noticeable,evident}}\na ([a-z]+ )?mix(ture)? of = {{random:both,a combination}} of\nhalf-lidded = {{random:half-closed,relaxed,aroused,erotic}}\npool.{1,15}belly = {{random:heightened,intensified,built up,escalated}}\n(that )?fill.{1,15} [a-z\\s]{1,20} = {{random:echoed,dispersed,diffused}}\nmaybe, just maybe = maybe\n\n{{// something you want to remove here. This entry must be the last }}\ncalloused \\|bruising (?=kiss)\\|kiss-(bruised\\|swollen) \\|predatory \\| wickedly\\| slyly\\|chestnut \\|emerald \\|fiery \\|dusky \\| darkly\\|forbidden (?=plea\\|des) = \n\n|\n\n/setvar key=msg {{lastMessage}} |\n/setvar key=tomsgprocess {{getvar::thesaurus}} |\n/setvar key=looping true |\n/while left=looping rule=eq right=true \"/run utils.thesaurusreplace\" |\n/hide {{lastMessageId}} |\n\n/len {{char}} |\n/if left={{pipe}} rule=lte right=0 else={:\n  /pass {{char}} |\n  /sendas name={{pipe}} {{getvar::msg}}\n:}\n{:\n  /comment {{getvar::msg}}\n:}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":16,"icon":"","showLabel":false,"label":"thesaurusreplace","title":"","message":"/setvar key=startregex \\s* | /setvar key=endregex \\s+= |\n/run creamsan.regextract | /setvar key=from |\n\n/setvar key=startregex \\s+=\\s+ | /setvar key=endregex \\s*\\n |\n/run creamsan.regextract | /setvar key=to |\n\n/setvar key=toreplace {{getvar::to}} |\n/setvar key=regexflags gi |\n/setvar key=regex {{getvar::from}} |\n/regex name=regexreplace {{getvar::msg}} | /setvar key=msg |\n\n/flushvar toreplace |\n/setvar key=regexflags mi |\n/setvar key=regex ^[\\S\\s]+?$ |\n/regex name=regexreplace {{getvar::thesaurus}} |\n/setvar key=thesaurus | /setvar key=tomsgprocess |\n\n/len {{getvar::thesaurus}} | /setvar key=len |\n/if left=len rule=lte right=0 {: /setvar key=looping false :} |\n\n/if left=thesaurus rule=lte right=0 {:\n  /setvar key=looping false\n:}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":18,"icon":"","showLabel":false,"label":"üìú","title":"List variables","message":"/listvar","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":20,"icon":"","showLabel":false,"label":"üóëÔ∏è","title":"Clear msg box","message":"/setinput {{noop}}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":22,"icon":"","showLabel":false,"label":"üñºÔ∏è","title":"Display char avatar/external img in the chat","message":"/buttons labels=[\"Avatar\",\"External\"] |\n/setvar key=todisp |\n/setvar key=varname todisp |\n/run creamsan.isvardefined |\n\n/if left={{pipe}} rule=eq right=false {: /break :} |\n\n/if left=todisp rule=eq right=Avatar else={:\n  /input <h3>Input image link</h3> |\n  /setvar key=imglink |\n  /setvar key=varname imglink |\n  /run creamsan.isvardefined |\n  /if left={{pipe}} rule=eq right=false {: /break :} |\n  /comment <img src=\"{{getvar::imglink}}\" alt=\"char avatar\">\n:}\n{:\n  /comment <img src=\"/characters/{{char}}.png\" alt=\"char avatar\">\n:}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":24,"icon":"","showLabel":false,"label":"OOC","title":"OOC stuffs. Check collections QR to add more.","message":"/run utils.oocollections |\n\n/setvar key=oocdict {} |\n/setvar key=barr [ |\n/setvar key=i 0 |\n/len {{getvar::oocindex}} | /setvar key=len |\n/times {{getvar::len}} {:\n  /getvar index={{getvar::i}} oocindex |\n  /setvar key=val |\n  /setvar key=barr {{getvar::barr}}\"{{getvar::val}}\" |\n  /setvar key=oocdict index={{getvar::val}} {{getvar::i}} |\n  /sub len 1 |\n  /if left=i rule=neq right={{pipe}} else={: /setvar key=barr {{getvar::barr}}] :} {: /setvar key=barr {{getvar::barr}}, :} |\n  /addvar key=i 1 \n:} |\n\n/buttons labels={{getvar::barr}} <h3>OOC</h3> |\n\n/setvar key=ooc | /setvar key=varname ooc |\n/run creamsan.isvardefined |\n/if left={{pipe}} rule=eq right=false {: /break :} |\n\n/getvar index={{getvar::ooc}} oocdict |\n/getvar index={{pipe}} oocollections |\n\n/setinput {{input}}\n[{{pipe}}]","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":26,"icon":"","showLabel":false,"label":"oocollections","title":"More OOC stuff: https://rentry.org/weirdbutfunjailbreaksandprompts","message":"// to add your own, just follow the pattern |\n\n/setvar key=oocindex index=0 4ch /h/ thread |\n/setvar key=oocindex index=1 Neofetch |\n/setvar key=oocindex index=2 Website |\n/setvar key=oocindex index=3 New NPC |\n\n/setvar key=oocollections index=0 Write a very schizophrenic 4chan /h/ thread where the anons are reacting to what just transpired as if it's a new hentai that just released. Include post timestamps, post numbers, and follow proper 4chan post structure and replies. Avoid reddit mannerisms. Posters use rude language. Include greentext if applicable. Be creative, and humorous. |\n\n/setvar key=oocollections index=1 Post your character's neofetch. Follow the format of an ordinary neofetch. Use markdown. Be creative and humorous. |\n\n/setvar key=oocollections index=2 Use HTML to simulate a quirky colorful 90s website as it would have been designed and written by your character before any adventures. Be descriptive, creative, and humorous. Don't wrap the HTML in code blocks. Attributes must be wrapped in single quotes, not double quotes. If using image, use the URL https://image.pollinations.ai/prompt/%7Burl%20encoded%20description%20here%7D. Use no more than two images. You may use inline CSS but not Javascript. Wrap the site in a div tag, don't use html or body tag. |\n\n/setvar key=oocollections index=3 Generate a new NPC based on the following emoji: {{random:üòÄ, üòÅ, üòÇ, ü§£, üòÉ, üòÑ, üòÖ, üòÜ, üòâ, üòä, üòã, üòé, üòç, üòò, ü•∞, üòó, üòô, üòö, ‚ò∫Ô∏è, üôÇ, ü§ó, ü§©, ü§î, ü§®, üòê, üòë, üò∂, üôÑ, üòè, üò£, üò•, üòÆ, ü§ê, üòØ, üò™, üò´, üò¥, üòå, üòõ, üòú, üòù, ü§§, üòí, üòì, üòî, üòï, üôÉ, ü§ë, üò≤, ‚òπÔ∏è, üôÅ, üòñ, üòû, üòü, üò§, üò¢, üò≠, üò¶, üòß, üò®, üò©, ü§Ø, üò¨, üò∞, üò±, ü•µ, ü•∂, üò≥, ü§™, üòµ, üò°, üò†, ü§¨, üò∑, ü§í, ü§ï, ü§¢, ü§Æ, ü§ß, üòá, ü§†, ü§°, ü•≥, ü•¥, ü•∫, ü§•, ü§´, ü§≠, üßê, ü§ì, üòà, üëø, üëπ, üë∫, üíÄ, üëª, üëΩ, ü§ñ, üí©, üò∫, üò∏, üòπ, üòª, üòº, üòΩ, üôÄ, üòø, üòæ, üë∂, üëß, üßí, üë¶, üë©, üßë, üë®, üëµ, üßì, üë¥, üë≤, üë≥‚Äç‚ôÄÔ∏è, üë≥‚Äç‚ôÇÔ∏è, üßï, üßî, üë±‚Äç‚ôÇÔ∏è, üë±‚Äç‚ôÄÔ∏è, üë®‚Äçü¶∞, üë©‚Äçü¶∞, üë®‚Äçü¶±, üë©‚Äçü¶±, üë®‚Äçü¶≤, üë©‚Äçü¶≤, üë®‚Äçü¶≥, üë©‚Äçü¶≥, ü¶∏‚Äç‚ôÄÔ∏è, ü¶∏‚Äç‚ôÇÔ∏è, ü¶π‚Äç‚ôÄÔ∏è, ü¶π‚Äç‚ôÇÔ∏è, üëÆ‚Äç‚ôÄÔ∏è, üëÆ‚Äç‚ôÇÔ∏è, üë∑‚Äç‚ôÄÔ∏è, üë∑‚Äç‚ôÇÔ∏è, üíÇ‚Äç‚ôÄÔ∏è, üíÇ‚Äç‚ôÇÔ∏è, üïµÔ∏è‚Äç‚ôÄÔ∏è, üïµÔ∏è‚Äç‚ôÇÔ∏è, üë©‚Äç‚öïÔ∏è, üë®‚Äç‚öïÔ∏è, üë©‚Äçüåæ, üë®‚Äçüåæ, üë©‚Äçüç≥, üë®‚Äçüç≥, üë©‚Äçüéì, üë®‚Äçüéì, üë©‚Äçüé§, üë®‚Äçüé§, üë©‚Äçüè´, üë®‚Äçüè´, üë©‚Äçüè≠, üë®‚Äçüè≠, üë©‚Äçüíª, üë®‚Äçüíª, üë©‚Äçüíº, üë®‚Äçüíº, üë©‚Äçüîß, üë®‚Äçüîß, üë©‚Äçüî¨, üë®‚Äçüî¨, üë©‚Äçüé®, üë®‚Äçüé®, üë©‚Äçüöí, üë®‚Äçüöí, üë©‚Äç‚úàÔ∏è, üë®‚Äç‚úàÔ∏è, üë©‚ÄçüöÄ, üë®‚ÄçüöÄ, üë©‚Äç‚öñÔ∏è, üë®‚Äç‚öñÔ∏è, üë∞, ü§µ, üë∏, ü§¥, ü§∂, üéÖ, üßô‚Äç‚ôÄÔ∏è, üßô‚Äç‚ôÇÔ∏è, üßù‚Äç‚ôÄÔ∏è, üßù‚Äç‚ôÇÔ∏è, üßõ‚Äç‚ôÄÔ∏è, üßõ‚Äç‚ôÇÔ∏è, üßü‚Äç‚ôÄÔ∏è, üßü‚Äç‚ôÇÔ∏è, üßû‚Äç‚ôÄÔ∏è, üßû‚Äç‚ôÇÔ∏è, üßú‚Äç‚ôÄÔ∏è, üßú‚Äç‚ôÇÔ∏è, üßö‚Äç‚ôÄÔ∏è, üßö‚Äç‚ôÇÔ∏è, üëº, ü§∞, ü§±, üôá‚Äç‚ôÄÔ∏è, üôá‚Äç‚ôÇÔ∏è, üíÅ‚Äç‚ôÄÔ∏è, üíÅ‚Äç‚ôÇÔ∏è, üôÖ‚Äç‚ôÄÔ∏è, üôÖ‚Äç‚ôÇÔ∏è, üôÜ‚Äç‚ôÄÔ∏è, üôÜ‚Äç‚ôÇÔ∏è, üôã‚Äç‚ôÄÔ∏è, üôã‚Äç‚ôÇÔ∏è, ü§¶‚Äç‚ôÄÔ∏è, ü§¶‚Äç‚ôÇÔ∏è, ü§∑‚Äç‚ôÄÔ∏è, ü§∑‚Äç‚ôÇÔ∏è, üôé‚Äç‚ôÄÔ∏è, üôé‚Äç‚ôÇÔ∏è, üôç‚Äç‚ôÄÔ∏è, üôç‚Äç‚ôÇÔ∏è, üíá‚Äç‚ôÄÔ∏è, üíá‚Äç‚ôÇÔ∏è, üíÜ‚Äç‚ôÄÔ∏è, üíÜ‚Äç‚ôÇÔ∏è, üßñ‚Äç‚ôÄÔ∏è, üßñ‚Äç‚ôÇÔ∏è, üíÖ, ü§≥, üíÉ, üï∫, üëØ‚Äç‚ôÄÔ∏è, üëØ‚Äç‚ôÇÔ∏è, üï¥, üö∂‚Äç‚ôÄÔ∏è, üö∂‚Äç‚ôÇÔ∏è, üèÉ‚Äç‚ôÄÔ∏è, üèÉ‚Äç‚ôÇÔ∏è, üë´, üë≠, üë¨, üíë, üë©‚Äç‚ù§Ô∏è‚Äçüë©, üë®‚Äç‚ù§Ô∏è‚Äçüë®, üíè, üë©‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë©, üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë®, üë™, üë®‚Äçüë©‚Äçüëß, üë®‚Äçüë©‚Äçüëß‚Äçüë¶, üë®‚Äçüë©‚Äçüë¶‚Äçüë¶, üë®‚Äçüë©‚Äçüëß‚Äçüëß, üë©‚Äçüë©‚Äçüë¶, üë©‚Äçüë©‚Äçüëß, üë©‚Äçüë©‚Äçüëß‚Äçüë¶, üë©‚Äçüë©‚Äçüë¶‚Äçüë¶, üë©‚Äçüë©‚Äçüëß‚Äçüëß, üë®‚Äçüë®‚Äçüë¶, üë®‚Äçüë®‚Äçüëß, üë®‚Äçüë®‚Äçüëß‚Äçüë¶, üë®‚Äçüë®‚Äçüë¶‚Äçüë¶, üë®‚Äçüë®‚Äçüëß‚Äçüëß, üë©‚Äçüë¶, üë©‚Äçüëß, üë©‚Äçüëß‚Äçüë¶, üë©‚Äçüë¶‚Äçüë¶, üë©‚Äçüëß‚Äçüëß, üë®‚Äçüë¶, üë®‚Äçüëß, üë®‚Äçüëß‚Äçüë¶, üë®‚Äçüë¶‚Äçüë¶, üë®‚Äçüëß‚Äçüëß, ü§≤, üëê, üôå, üëè, ü§ù, üëç, üëé, üëä, ‚úä, ü§õ, ü§ú, ü§û, ‚úåÔ∏è, ü§ü, ü§ò, üëå, üëà, üëâ, üëÜ, üëá, ‚òùÔ∏è, ‚úã, ü§ö, üñê, üññ, üëã, ü§ô, üí™, ü¶µ, ü¶∂, üñï, ‚úçÔ∏è, üôè, üíç, üíÑ, üíã, üëÑ, üëÖ, üëÇ, üëÉ, üë£, üëÅ, üëÄ, üß†, ü¶¥, ü¶∑, üó£, üë§, üë•, üß•, üëö, üëï, üëñ, üëî, üëó, üëô, üëò, üë†, üë°, üë¢, üëû, üëü, ü•æ, ü•ø, üß¶, üß§, üß£, üé©, üß¢, üëí, üéì, ‚õë, üëë, üëù, üëõ, üëú, üíº, üéí, üëì, üï∂, ü•Ω, ü•º, üåÇ, üßµ, üß∂, üê∂, üê±, üê≠, üêπ, üê∞, ü¶ä, ü¶ù, üêª, üêº, ü¶ò, ü¶°, üê®, üêØ, ü¶Å, üêÆ, üê∑, üêΩ, üê∏, üêµ, üôà, üôâ, üôä, üêí, üêî, üêß, üê¶, üê§, üê£, üê•, ü¶Ü, ü¶¢, ü¶Ö, ü¶â, ü¶ö, ü¶ú, ü¶á, üê∫, üêó, üê¥, ü¶Ñ, üêù, üêõ, ü¶ã, üêå, üêö, üêû, üêú, ü¶ó, üï∑, üï∏, ü¶Ç, ü¶ü, ü¶†, üê¢, üêç, ü¶é, ü¶ñ, ü¶ï, üêô, ü¶ë, ü¶ê, ü¶Ä, üê°, üê†, üêü, üê¨, üê≥, üêã, ü¶à, üêä, üêÖ, üêÜ, ü¶ì, ü¶ç, üêò, ü¶è, ü¶õ, üê™, üê´, ü¶ô, ü¶í, üêÉ, üêÇ, üêÑ, üêé, üêñ, üêè, üêë, üêê, ü¶å, üêï, üê©, üêà, üêì, ü¶É, üïä, üêá, üêÅ, üêÄ, üêø, ü¶î, üêæ, üêâ, üê≤, üåµ, üéÑ, üå≤, üå≥, üå¥, üå±, üåø, ‚òòÔ∏è, üçÄ, üéç, üéã, üçÉ, üçÇ, üçÅ, üçÑ, üåæ, üíê, üå∑, üåπ, ü•Ä, üå∫, üå∏, üåº, üåª, üåû, üåù, üåõ, üåú, üåö, üåï, üåñ, üåó, üåò, üåë, üåí, üåì, üåî, üåô, üåé, üåç, üåè, üí´, ‚≠êÔ∏è, üåü, ‚ú®, ‚ö°Ô∏è, ‚òÑÔ∏è, üí•, üî•, üå™, üåà, ‚òÄÔ∏è, üå§, ‚õÖÔ∏è, üå•, ‚òÅÔ∏è, üå¶, üåß, ‚õà, üå©, üå®, ‚ùÑÔ∏è, ‚òÉÔ∏è, ‚õÑÔ∏è, üå¨, üí®, üíß, üí¶, ‚òîÔ∏è, ‚òÇÔ∏è, üåä, üå´, üçè, üçé, üçê, üçä, üçã, üçå, üçâ, üçá, üçì, üçà, üçí, üçë, üçç, ü•≠, ü••, ü•ù, üçÖ, üçÜ, ü•ë, ü•¶, ü•í, ü•¨, üå∂, üåΩ, ü•ï, ü•î, üç†, ü•ê, üçû, ü•ñ, ü•®, ü•Ø, üßÄ, ü•ö, üç≥, ü•û, ü•ì, ü•©, üçó, üçñ, üå≠, üçî, üçü, üçï, ü•™, ü•ô, üåÆ, üåØ, ü•ó, ü•ò, ü•´, üçù, üçú, üç≤, üçõ, üç£, üç±, ü•ü, üç§, üçô, üçö, üçò, üç•, ü•Æ, ü•†, üç¢, üç°, üçß, üç®, üç¶, ü•ß, üç∞, üéÇ, üçÆ, üç≠, üç¨, üç´, üçø, üßÇ, üç©, üç™, üå∞, ü•ú, üçØ, ü•õ, üçº, ‚òïÔ∏è, üçµ, ü•§, üç∂, üç∫, üçª, ü•Ç, üç∑, ü•É, üç∏, üçπ, üçæ, ü•Ñ, üç¥, üçΩ, ü•£, ü•°, ü•¢, ‚öΩÔ∏è, üèÄ, üèà, ‚öæÔ∏è, ü•é, üèê, üèâ, üéæ, ü•è, üé±, üèì, üè∏, ü•Ö, üèí, üèë, ü•ç, üèè, ‚õ≥Ô∏è, üèπ, üé£, ü•ä, ü•ã, üéΩ, ‚õ∏, ü•å, üõ∑, üõπ, üéø, ‚õ∑, üèÇ, üèãÔ∏è‚Äç‚ôÄÔ∏è, üèãÔ∏è‚Äç‚ôÇÔ∏è, ü§º‚Äç‚ôÄÔ∏è, ü§º‚Äç‚ôÇÔ∏è, ü§∏‚Äç‚ôÄÔ∏è, ü§∏‚Äç‚ôÇÔ∏è, ‚õπÔ∏è‚Äç‚ôÄÔ∏è, ‚õπÔ∏è‚Äç‚ôÇÔ∏è, ü§∫, ü§æ‚Äç‚ôÄÔ∏è, ü§æ‚Äç‚ôÇÔ∏è, üèåÔ∏è‚Äç‚ôÄÔ∏è, üèåÔ∏è‚Äç‚ôÇÔ∏è, üèá, üßò‚Äç‚ôÄÔ∏è, üßò‚Äç‚ôÇÔ∏è, üèÑ‚Äç‚ôÄÔ∏è, üèÑ‚Äç‚ôÇÔ∏è, üèä‚Äç‚ôÄÔ∏è, üèä‚Äç‚ôÇÔ∏è, ü§Ω‚Äç‚ôÄÔ∏è, ü§Ω‚Äç‚ôÇÔ∏è, üö£‚Äç‚ôÄÔ∏è, üö£‚Äç‚ôÇÔ∏è, üßó‚Äç‚ôÄÔ∏è, üßó‚Äç‚ôÇÔ∏è, üöµ‚Äç‚ôÄÔ∏è, üöµ‚Äç‚ôÇÔ∏è, üö¥‚Äç‚ôÄÔ∏è, üö¥‚Äç‚ôÇÔ∏è, üèÜ, ü•á, ü•à, ü•â, üèÖ, üéñ, üèµ, üéó, üé´, üéü, üé™, ü§π‚Äç‚ôÄÔ∏è, ü§π‚Äç‚ôÇÔ∏è, üé≠, üé®, üé¨, üé§, üéß, üéº, üéπ, ü•Å, üé∑, üé∫, üé∏, üéª, üé≤, üß©, ‚ôü, üéØ, üé≥, üéÆ, üé∞, üöó, üöï, üöô, üöå, üöé, üèé, üöì, üöë, üöí, üöê, üöö, üöõ, üöú, üõ¥, üö≤, üõµ, üèç, üö®, üöî, üöç, üöò, üöñ, üö°, üö†, üöü, üöÉ, üöã, üöû, üöù, üöÑ, üöÖ, üöà, üöÇ, üöÜ, üöá, üöä, üöâ, ‚úàÔ∏è, üõ´, üõ¨, üõ©, üí∫, üõ∞, üöÄ, üõ∏, üöÅ, üõ∂, ‚õµÔ∏è, üö§, üõ•, üõ≥, ‚õ¥, üö¢, ‚öìÔ∏è, ‚õΩÔ∏è, üöß, üö¶, üö•, üöè, üó∫, üóø, üóΩ, üóº, üè∞, üèØ, üèü, üé°, üé¢, üé†, ‚õ≤Ô∏è, ‚õ±, üèñ, üèù, üèú, üåã, ‚õ∞, üèî, üóª, üèï, ‚õ∫Ô∏è, üè†, üè°, üèò, üèö, üèó, üè≠, üè¢, üè¨, üè£, üè§, üè•, üè¶, üè®, üè™, üè´, üè©, üíí, üèõ, ‚õ™Ô∏è, üïå, üïç, üïã, ‚õ©, üõ§, üõ£, üóæ, üéë, üèû, üåÖ, üåÑ, üå†, üéá, üéÜ, üåá, üåÜ, üèô, üåÉ, üåå, üåâ, üåÅ, ‚åöÔ∏è, üì±, üì≤, üíª, ‚å®Ô∏è, üñ•, üñ®, üñ±, üñ≤, üïπ, üóú, üíΩ, üíæ, üíø, üìÄ, üìº, üì∑, üì∏, üìπ, üé•, üìΩ, üéû, üìû, ‚òéÔ∏è, üìü, üì†, üì∫, üìª, üéô, üéö, üéõ, ‚è±, ‚è≤, ‚è∞, üï∞, ‚åõÔ∏è, ‚è≥, üì°, üîã, üîå, üí°, üî¶, üïØ, üóë, üõ¢, üí∏, üíµ, üí¥, üí∂, üí∑, üí∞, üí≥, üßæ, üíé, ‚öñÔ∏è, üîß, üî®, ‚öí, üõ†, ‚õè, üî©, ‚öôÔ∏è, ‚õì, üî´, üí£, üî™, üó°, ‚öîÔ∏è, üõ°, üö¨, ‚ö∞Ô∏è, ‚ö±Ô∏è, üè∫, üß≠, üß±, üîÆ, üßø, üß∏, üìø, üíà, ‚öóÔ∏è, üî≠, üß∞, üß≤, üß™, üß´, üß¨, üßØ, üî¨, üï≥, üíä, üíâ, üå°, üöΩ, üö∞, üöø, üõÅ, üõÄ, üõÄüèª, üõÄüèº, üõÄüèΩ, üõÄüèæ, üõÄüèø, üß¥, üßµ, üß∂, üß∑, üßπ, üß∫, üßª, üßº, üßΩ, üõé, üîë, üóù, üö™, üõã, üõè, üõå, üñº, üõç, üß≥, üõí, üéÅ, üéà, üéè, üéÄ, üéä, üéâ, üß®, üéé, üèÆ, üéê, üßß, ‚úâÔ∏è, üì©, üì®, üìß, üíå, üì•, üì§, üì¶, üè∑, üì™, üì´, üì¨, üì≠, üìÆ, üìØ, üìú, üìÉ, üìÑ, üìë, üìä, üìà, üìâ, üóí, üóì, üìÜ, üìÖ, üìá, üóÉ, üó≥, üóÑ, üìã, üìÅ, üìÇ, üóÇ, üóû, üì∞, üìì, üìî, üìí, üìï, üìó, üìò, üìô, üìö, üìñ, üîñ, üîó, üìé, üñá, üìê, üìè, üìå, üìç, ‚úÇÔ∏è, üñä, üñã, ‚úíÔ∏è, üñå, üñç, üìù, ‚úèÔ∏è, üîç, üîé, üîè, üîê, üîí, üîì, ‚ù§Ô∏è, üß°, üíõ, üíö, üíô, üíú, üñ§, üíî, ‚ù£Ô∏è, üíï, üíû, üíì, üíó, üíñ, üíò, üíù, üíü, ‚òÆÔ∏è, ‚úùÔ∏è, ‚ò™Ô∏è, üïâ, ‚ò∏Ô∏è, ‚ú°Ô∏è, üîØ, üïé, ‚òØÔ∏è, ‚ò¶Ô∏è, üõê, ‚õé, ‚ôàÔ∏è, ‚ôâÔ∏è, ‚ôäÔ∏è, ‚ôãÔ∏è, ‚ôåÔ∏è, ‚ôçÔ∏è, ‚ôéÔ∏è, ‚ôèÔ∏è, ‚ôêÔ∏è, ‚ôëÔ∏è, ‚ôíÔ∏è, ‚ôìÔ∏è, üÜî, ‚öõÔ∏è, üâë, ‚ò¢Ô∏è, ‚ò£Ô∏è, üì¥, üì≥, üà∂, üàöÔ∏è, üà∏, üà∫, üà∑Ô∏è, ‚ú¥Ô∏è, üÜö, üíÆ, üâê, „äôÔ∏è, „äóÔ∏è, üà¥, üàµ, üàπ, üà≤, üÖ∞Ô∏è, üÖ±Ô∏è, üÜé, üÜë, üÖæÔ∏è, üÜò, ‚ùå, ‚≠ïÔ∏è, üõë, ‚õîÔ∏è, üìõ, üö´, üíØ, üí¢, ‚ô®Ô∏è, üö∑, üöØ, üö≥, üö±, üîû, üìµ, üö≠, ‚ùóÔ∏è, ‚ùï, ‚ùì, ‚ùî, ‚ÄºÔ∏è, ‚ÅâÔ∏è, üîÖ, üîÜ „ÄΩÔ∏è, ‚ö†Ô∏è, üö∏, üî±, ‚öúÔ∏è, üî∞, ‚ôªÔ∏è, ‚úÖ, üàØÔ∏è, üíπ, ‚ùáÔ∏è, ‚ú≥Ô∏è, ‚ùé, üåê, üí†, ‚ìÇÔ∏è, üåÄ, üí§, üèß, üöæ, ‚ôøÔ∏è, üÖøÔ∏è, üà≥, üàÇÔ∏è, üõÇ, üõÉ, üõÑ, üõÖ, üöπ, üö∫, üöº, üöª, üöÆ, üé¶, üì∂, üàÅ, üî£, ‚ÑπÔ∏è, üî§, üî°, üî†, üÜñ, üÜó, üÜô, üÜí, üÜï, üÜì, 0Ô∏è‚É£, 1Ô∏è‚É£, 2Ô∏è‚É£, 3Ô∏è‚É£, 4Ô∏è‚É£, 5Ô∏è‚É£, 6Ô∏è‚É£, 7Ô∏è‚É£, 8Ô∏è‚É£, 9Ô∏è‚É£, üîü, üî¢, #Ô∏è‚É£, *Ô∏è‚É£, ‚èèÔ∏è, ‚ñ∂Ô∏è, ‚è∏, ‚èØ, ‚èπ, ‚è∫, ‚è≠, ‚èÆ, ‚è©, ‚è™, ‚è´, ‚è¨, ‚óÄÔ∏è, üîº, üîΩ, ‚û°Ô∏è, ‚¨ÖÔ∏è, ‚¨ÜÔ∏è, ‚¨áÔ∏è, ‚ÜóÔ∏è, ‚ÜòÔ∏è, ‚ÜôÔ∏è, ‚ÜñÔ∏è, ‚ÜïÔ∏è, ‚ÜîÔ∏è, ‚Ü™Ô∏è, ‚Ü©Ô∏è, ‚§¥Ô∏è, ‚§µÔ∏è, üîÄ, üîÅ, üîÇ, üîÑ, üîÉ, üéµ, üé∂, ‚ûï, ‚ûñ, ‚ûó, ‚úñÔ∏è, ‚ôæ, üí≤, üí±, ‚Ñ¢Ô∏è, ¬©Ô∏è, ¬ÆÔ∏è, „Ä∞Ô∏è, ‚û∞, ‚ûø, üîö, üîô, üîõ, üîù, üîú, ‚úîÔ∏è, ‚òëÔ∏è, üîò, ‚ö™Ô∏è, ‚ö´Ô∏è, üî¥, üîµ, üî∫, üîª, üî∏, üîπ, üî∂, üî∑, üî≥, üî≤, ‚ñ™Ô∏è, ‚ñ´Ô∏è, ‚óæÔ∏è, ‚óΩÔ∏è, ‚óºÔ∏è, ‚óªÔ∏è, ‚¨õÔ∏è, ‚¨úÔ∏è, üîà, üîá, üîâ, üîä, üîî, üîï, üì£, üì¢, üëÅ‚Äçüó®, üí¨, üí≠, üóØ, ‚ô†Ô∏è, ‚ô£Ô∏è, ‚ô•Ô∏è, ‚ô¶Ô∏è, üÉè, üé¥, üÄÑÔ∏è, üïê, üïë, üïí, üïì, üïî, üïï, üïñ, üïó, üïò, üïô, üïö, üïõ, üïú, üïù, üïû, üïü, üï†, üï°, üï¢, üï£, üï§, üï•, üï¶, üïß, üè≥Ô∏è, üè¥, üèÅ, üö©, üè≥Ô∏è‚Äçüåà, üè¥‚Äç‚ò†Ô∏è, üá¶üá´, üá¶üáΩ, üá¶üá±, üá©üáø, üá¶üá∏, üá¶üá©, üá¶üá¥, üá¶üáÆ, üá¶üá∂, üá¶üá¨, üá¶üá∑, üá¶üá≤, üá¶üáº, üá¶üá∫, üá¶üáπ, üá¶üáø, üáßüá∏, üáßüá≠, üáßüá©, üáßüáß, üáßüáæ, üáßüá™, üáßüáø, üáßüáØ, üáßüá≤, üáßüáπ, üáßüá¥, üáßüá¶, üáßüáº, üáßüá∑, üáÆüá¥, üáªüá¨, üáßüá≥, üáßüá¨, üáßüá´, üáßüáÆ, üá∞üá≠, üá®üá≤, üá®üá¶, üáÆüá®, üá®üáª, üáßüá∂, üá∞üáæ, üá®üá´, üáπüá©, üá®üá±, üá®üá≥, üá®üáΩ, üá®üá®, üá®üá¥, üá∞üá≤, üá®üá¨, üá®üá©, üá®üá∞, üá®üá∑, üá®üáÆ, üá≠üá∑, üá®üá∫, üá®üáº, üá®üáæ, üá®üáø, üá©üá∞, üá©üáØ, üá©üá≤, üá©üá¥, üá™üá®, üá™üá¨, üá∏üáª, üá¨üá∂, üá™üá∑, üá™üá™, üá™üáπ, üá™üá∫, üá´üá∞, üá´üá¥, üá´üáØ, üá´üáÆ, üá´üá∑, üá¨üá´, üáµüá´, üáπüá´, üá¨üá¶, üá¨üá≤, üá¨üá™, üá©üá™, üá¨üá≠, üá¨üáÆ, üá¨üá∑, üá¨üá±, üá¨üá©, üá¨üáµ, üá¨üá∫, üá¨üáπ, üá¨üá¨, üá¨üá≥, üá¨üáº, üá¨üáæ, üá≠üáπ, üá≠üá≥, üá≠üá∞, üá≠üá∫, üáÆüá∏, üáÆüá≥, üáÆüá©, üáÆüá∑, üáÆüá∂, üáÆüá™, üáÆüá≤, üáÆüá±, üáÆüáπ, üáØüá≤, üáØüáµ, üéå, üáØüá™, üáØüá¥, üá∞üáø, üá∞üá™, üá∞üáÆ, üáΩüá∞, üá∞üáº, üá∞üá¨, üá±üá¶, üá±üáª, üá±üáß, üá±üá∏, üá±üá∑, üá±üáæ, üá±üáÆ, üá±üáπ, üá±üá∫, üá≤üá¥, üá≤üá∞, üá≤üá¨, üá≤üáº, üá≤üáæ, üá≤üáª, üá≤üá±, üá≤üáπ, üá≤üá≠, üá≤üá∂, üá≤üá∑, üá≤üá∫, üáæüáπ, üá≤üáΩ, üá´üá≤, üá≤üá©, üá≤üá®, üá≤üá≥, üá≤üá™, üá≤üá∏, üá≤üá¶, üá≤üáø, üá≤üá≤, üá≥üá¶, üá≥üá∑, üá≥üáµ, üá≥üá±, üá≥üá®, üá≥üáø, üá≥üáÆ, üá≥üá™, üá≥üá¨, üá≥üá∫, üá≥üá´, üá∞üáµ, üá≤üáµ, üá≥üá¥, üá¥üá≤, üáµüá∞, üáµüáº, üáµüá∏, üáµüá¶, üáµüá¨, üáµüáæ, üáµüá™, üáµüá≠, üáµüá≥, üáµüá±, üáµüáπ, üáµüá∑, üá∂üá¶, üá∑üá™, üá∑üá¥, üá∑üá∫, üá∑üáº, üáºüá∏, üá∏üá≤, üá∏üá¶, üá∏üá≥, üá∑üá∏, üá∏üá®, üá∏üá±, üá∏üá¨, üá∏üáΩ, üá∏üá∞, üá∏üáÆ, üá¨üá∏, üá∏üáß, üá∏üá¥, üáøüá¶, üá∞üá∑, üá∏üá∏, üá™üá∏, üá±üá∞, üáßüá±, üá∏üá≠, üá∞üá≥, üá±üá®, üáµüá≤, üáªüá®, üá∏üá©, üá∏üá∑, üá∏üáø, üá∏üá™, üá®üá≠, üá∏üáæ, üáπüáº, üáπüáØ, üáπüáø, üáπüá≠, üáπüá±, üáπüá¨, üáπüá∞, üáπüá¥, üáπüáπ, üáπüá≥, üáπüá∑, üáπüá≤, üáπüá®, üáπüáª, üáªüáÆ, üá∫üá¨, üá∫üá¶, üá¶üá™, üá¨üáß, üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø, üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åø, üè¥Û†ÅßÛ†Å¢Û†Å∑Û†Å¨Û†Å≥Û†Åø, üá∫üá≥, üá∫üá∏, üá∫üáæ, üá∫üáø, üáªüá∫, üáªüá¶, üáªüá™, üáªüá≥, üáºüá´, üá™üá≠, üáæüá™, üáøüá≤, üáøüáº, ü•∞, ü•µ, ü•∂, ü•≥, ü•¥, ü•∫, üë®‚Äçü¶∞, üë©‚Äçü¶∞, üë®‚Äçü¶±, üë©‚Äçü¶±, üë®‚Äçü¶≤, üë©‚Äçü¶≤, üë®‚Äçü¶≥, üë©‚Äçü¶≥, ü¶∏, ü¶∏‚Äç‚ôÄÔ∏è, ü¶∏‚Äç‚ôÇÔ∏è, ü¶π, ü¶π‚Äç‚ôÄÔ∏è, ü¶π‚Äç‚ôÇÔ∏è, ü¶µ, ü¶∂, ü¶¥, ü¶∑, ü•Ω, ü•º, ü•æ, ü•ø, ü¶ù, ü¶ô, ü¶õ, ü¶ò, ü¶°, ü¶¢, ü¶ö, ü¶ú, ü¶û, ü¶ü, ü¶†, ü•≠, ü•¨, ü•Ø, üßÇ, ü•Æ, üßÅ, üß≠, üß±, üõπ, üß≥, üß®, üßß, ü•é, ü•è, ü•ç, üßø, üß©, üß∏, ‚ôü, üßÆ, üßæ, üß∞, üß≤, üß™, üß´, üß¨, üßØ, üß¥, üßµ, üß∂, üß∑, üßπ, üß∫, üßª, üßº, üßΩ, ‚ôæ, üè¥‚Äç‚ò†Ô∏è}}. It can be a motif, favorite thing, identity, or whatever. Be descriptive, creative, and humorous.","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":26}